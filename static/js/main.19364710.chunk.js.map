{"version":3,"sources":["components/Header.js","pages/Home.js","components/Input.js","components/UtilCard.js","pages/Factorial.js","math/factorial.js","pages/PageNotFound.js","serviceWorker.js","index.js"],"names":["Header","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","role","aria-haspopup","aria-labelledby","React","PureComponent","Home","Input","action","onChange","btnValue","btnPlaceholder","onKeyDown","placeholder","onClick","UtilCard","header","title","description","inputType","result","FactorialPage","props","state","value","event","parseInt","Number","target","this","setState","keyCode","factorial","num","undefined","numParsed","handleChange","bind","setValue","Component","PageNotFound","Boolean","window","location","hostname","match","Main","exact","path","component","Factorial","ReactDOM","render","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.19364710.chunk.js","sourcesContent":["import React from 'react';\n\nclass Header extends React.PureComponent {\n   render() {\n      return (\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n          <a className=\"navbar-brand\" href=\"/math_utils\">Math Utils</a>\n          <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul className=\"navbar-nav mr-auto\">\n              <li className=\"nav-item dropdown\">\n                <a className=\"nav-link dropdown-toggle\" href=\"/\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                  Functions\n                </a>\n                <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n                  <a className=\"dropdown-item\" href=\"/math_utils/fibonacci\">Fibonacci</a>\n                  <a className=\"dropdown-item\" href=\"/math_utils/factorial\">Factorial</a>\n                  <a className=\"dropdown-item\" href=\"/math_utils/gcd\">GCD</a>\n                </div>\n              </li>\n            </ul>\n          </div>\n        </nav>\n      );\n   }\n}\n\nexport default Header;\n","import React from 'react';\nimport Header from '../components/Header';\nimport '../assets/App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nfunction Home() {\n  return (\n    <div className=\"App\">\n      <Header/>\n    </div>\n  );\n}\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Input = ({action, onChange, type, btnValue, btnPlaceholder}) => {\n\treturn (\n\t\t<div className=\"input-group mb-3\">\n\t\t  <input\n\t\t  \ttype={type}\n\t\t  \tonChange={onChange}\n\t\t  \tonKeyDown={action}\n\t\t  \tclassName=\"form-control\"\n\t\t  \tplaceholder={btnPlaceholder}\n\t\t  />\n\t\t  <div className=\"input-group-append\">\n\t\t    <button\n\t\t    \tclassName=\"btn btn-primary\"\n\t\t    \ttype=\"button\"\n\t\t    \tonClick={action}\n\t\t    >\n\t\t    \t{btnValue}\n\t\t    </button>\n\t\t  </div>\n\t\t</div>\n\t);\n}\n\nInput.propTypes = {\n\taction: PropTypes.func.isRequired,\n\tonChange: PropTypes.func.isRequired,\n\ttype: PropTypes.string.isRequired,\n\tbtnValue: PropTypes.string.isRequired,\n\tbtnPlaceholder: PropTypes.string.isRequired,\n};\n\nexport default Input;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Input from \"./Input\";\n\nfunction UtilCard({\n\theader,\n\ttitle,\n\tdescription,\n\tbtnValue,\n\tbtnPlaceholder,\n\tinputType,\n\tresult,\n\taction,\n\tonChange\n}) {\n\treturn (\n\t\t<div className=\"card\">\n\t\t  <div className=\"card-header\">\n\t\t    {header}\n\t\t  </div>\n\t\t  <div className=\"card-body\">\n\t\t    <h5 className=\"card-title\">{title}: {result}</h5>\n\t\t    <p className=\"card-text\">{description}</p>\n\t    \t<Input\n    \t\t\taction={action}\n    \t\t\tonChange={onChange}\n    \t\t\ttype={inputType}\n    \t\t\tbtnValue={btnValue}\n    \t\t\tbtnPlaceholder={btnPlaceholder}\n    \t\t/>\n\t\t  </div>\n\t\t</div>\n\t);\n}\n\nUtilCard.propTypes = {\n\theader: PropTypes.string.isRequired,\n\ttitle: PropTypes.string.isRequired,\n\tdescription: PropTypes.string.isRequired,\n\tbtnValue: PropTypes.string.isRequired,\n\tbtnPlaceholder: PropTypes.string.isRequired,\n\tinputType: PropTypes.string.isRequired,\n\tresult: PropTypes.string.isRequired,\n\taction: PropTypes.func.isRequired,\n\tonChange: PropTypes.func.isRequired,\n};\n\nexport default UtilCard;\n","import React from 'react';\nimport {factorial} from '../math/factorial';\nimport Header from '../components/Header';\nimport UtilCard from '../components/UtilCard';\n\nclass FactorialPage extends React.Component {\n\n\tconstructor(props) {\n\t  super(props);\n\t  this.state = { result: null, value: null };\n\t}\n\n\tsetValue(event)  {\n\t\tconst value = parseInt(Number(event.target.value), 10);\n\t\tthis.setState({value});\n\t}\n\n\thandleChange(event) {\n\t\t// On Enter or on click\n\t    if (event.keyCode === 13 || event.type === 'click') {\n\t    \tconst {value} = this.state;\n\t    \tconst result = factorial(value);\n\t    \tthis.setState({result});\n\t    }\n\n\t }\n\n\trender() {\n\t\tconst {result} = this.state;\n\t    return (\n\t\t\t<>\n\t\t\t\t<Header/>\n\t\t\t\t<UtilCard\n\t\t\t\t\theader=\"Factorial\"\n\t\t\t\t\ttitle=\"Factorial\"\n\t\t\t\t\tresult={result}\n\t\t\t\t\tdescription={\"Enter an integer value and click on 'calculate' button or enter the 'Enter' key.\"}\n\t\t\t\t\tbtnValue=\"Calculate\"\n\t\t\t\t\tinputType=\"number\"\n\t\t\t\t\taction={this.handleChange.bind(this)}\n\t\t\t\t\tonChange={this.setValue.bind(this)}\n\t\t\t\t\tbtnPlaceholder=\"Integer value\"\n\t\t\t\t/>\n\t\t\t</>\n\t    );\n\t}\n}\n\n\nexport default FactorialPage;\n","\nexport const factorial = (num) => {\n\t/*\n\tUseful function to calculate the factorial of a given integer number.\n\t*/\n\tif (num === undefined || num === null) {\n\t\treturn null;\n\t}\n\tconst numParsed = parseInt(Number(num), 10);\n\tif (numParsed===0) {\n\t\treturn 1;\n\t} \n\t\treturn numParsed*factorial(numParsed-1);\n\t\n}\n","import React from 'react';\nimport Header from '../components/Header';\n\nfunction PageNotFound() {\n  return (\n    <div>\n      <Header/>\n      Not found.\n    </div>\n  );\n}\n\nexport default PageNotFound;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/index.css';\nimport {\n  BrowserRouter,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport Home from './pages/Home';\nimport Factorial from './pages/Factorial';\nimport PageNotFound from './pages/PageNotFound';\nimport * as serviceWorker from './serviceWorker';\n\n\n\n\n// This site has 3 pages, all of which are rendered\n// dynamically in the browser (not server rendered).\n//\n// Although the page does not ever refresh, notice how\n// React Router keeps the URL up to date as you navigate\n// through the site. This preserves the browser history,\n// making sure things like the back button and bookmarks\n// work properly.\n\nexport default function Main() {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={Home} />\n      <Route exact path=\"/factorial\" component={Factorial} />\n      <Route component={PageNotFound} />\n    </Switch>\n  );\n}\n\n\nReactDOM.render(\n  <BrowserRouter basename=\"/math_utils\">\n    <Main />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}